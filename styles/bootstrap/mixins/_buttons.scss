// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, $disable-color: $input-btn-disable-color, $hover-background: lighten($background, 10%), $hover-border: lighten($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 10%)) {
  color: color-yiq($background);
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $white;
    //color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus,
  &:active {
    color: $white;
    background: $active-background;
    border-color: $active-border;

    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      //box-shadow: $btn-box-shadow, 0 0 0 $input-btn-focus-width rgba($border, .5);
    }

    @else {
      //box-shadow: 0 0 0 $input-btn-focus-width rgba($border, .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $disable-color;
    border-color: $disable-color;
  }

  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active,
  .show>&.dropdown-toggle {
    //color: color-yiq($active-background);
    //background-color: $active-background;
    //@if $enable-gradients {
    //  background-image: none; // Remove the gradient for the pressed/active state
    //}
    //border-color: $active-border;
    //
    //// Avoid using mixin so we can pass custom focus shadow properly
    //@if $enable-shadows {
    //  box-shadow: $btn-active-box-shadow, 0 0 0 $input-btn-focus-width rgba($border, .5);
    //} @else {
    //  box-shadow: 0 0 0 $input-btn-focus-width rgba($border, .5);
    //}
  }
}

@mixin button-outline-variant($color, $color-hover: #fff, $disable-color: $input-btn-disable-color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus,
  &:active {
    color: $color-hover;
    //box-shadow: 0 0 0 $input-btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $disable-color;
    border-color: $disable-color;
    background-color: transparent;
  }

  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active,
  .show>&.dropdown-toggle {
    //color: $color-hover;
    //background-color: $color;
    //border-color: $color;
    // Avoid using mixin so we can pass custom focus shadow properly
    //box-shadow: 0 0 0 $input-btn-focus-width rgba($color, .5);
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $btn-min-width, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  //line-height: $line-height;
  min-width: $btn-min-width;
  @include border-radius($border-radius);
}